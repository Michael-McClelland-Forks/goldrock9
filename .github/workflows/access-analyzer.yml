name: 'access-analyzer'

on:
  workflow_call:
    inputs:
      account_id:
        required: true
        type: string
      region:
        required: true
        type: string
 
env:
  ORGANIZATION_MANAGEMENT_ACCOUNT_ID: ${{ vars.MANAGEMENT_ACCOUNT_ID }}
  ORGANIZATION_IDENTIFIER: ${{ vars.ORGANIZATION_IDENTIFIER }}
  WORKING_DIRECTORY: ./regional/access-analyzer/

# concurrency:
#   group: ${{ github.workflow }}
#   cancel-in-progress: false

jobs:
  deploy:
    name: 'deploy'
    runs-on: ubuntu-latest


    defaults:
      run:
        shell: bash

    permissions:
      contents: read
      id-token: write

    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        account_id: ${{fromJson(needs.setup.outputs.account_ids)}}
        region:
          - ${{ vars.HOME_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{inputs.account_id}}:role/goldrock-github-actions
          aws-region: ${{inputs.region}}
          mask-aws-account-id: false

      - name: Terraform init
        working-directory: ${{env.WORKING_DIRECTORY}}
        run: |
          terraform init \
            -backend-config="bucket=${{env.ORGANIZATION_IDENTIFIER}}-tfstate-${{env.ORGANIZATION_MANAGEMENT_ACCOUNT_ID}}-${{inputs.region}}" \
            -backend-config="dynamodb_table=arn:aws:dynamodb:${{inputs.region}}:${{env.ORGANIZATION_MANAGEMENT_ACCOUNT_ID}}:table/${{env.ORGANIZATION_IDENTIFIER}}-tfstate-${{env.ORGANIZATION_MANAGEMENT_ACCOUNT_ID}}-${{inputs.region}}" \
            -backend-config="kms_key_id=arn:aws:kms:${{inputs.region}}:${{env.ORGANIZATION_MANAGEMENT_ACCOUNT_ID}}:alias/${{env.ORGANIZATION_IDENTIFIER}}-tfstate" \
            -backend-config="key=${{inputs.account_id}}/${{inputs.region}}/$GITHUB_WORKFLOW" \
            -backend-config="region=${{inputs.region}}" \
            -backend-config="encrypt=true" \
            -backend-config="max_retries=20"

      - name: Terraform plan
        working-directory: ${{env.WORKING_DIRECTORY}}
        run: terraform plan -out plan
        env:
          TF_VAR_management_account_id: ${{env.ORGANIZATION_MANAGEMENT_ACCOUNT_ID}}
          TF_VAR_account_id: ${{inputs.account_id}}
          TF_VAR_region: ${{inputs.region}}
          TF_VAR_ref: ${{github.ref_name}}
          TF_VAR_ORGANIZATION_IDENTIFIER: ${{env.ORGANIZATION_IDENTIFIER}}

      - name: Terraform apply
        working-directory: ${{env.WORKING_DIRECTORY}}
        if: github.ref == 'refs/heads/main'
        run: terraform apply plan

